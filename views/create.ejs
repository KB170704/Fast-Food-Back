<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Create Menu Item</title>
    <style>
      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f4f4;
        padding: 2rem;
        margin: 0;
      }

      .top-bar {
        text-align: center;
        margin-bottom: 2rem;
      }

      .top-bar a {
        text-decoration: none;
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border-radius: 8px;
        margin: 0 10px;
        font-weight: 500;
        transition: background-color 0.3s ease;
        display: inline-block;
      }

      .top-bar a:hover {
        background-color: #0056b3;
      }

      .form-container {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
        width: 100%;
        max-width: 500px;
        margin: 0 auto;
      }

      h1 {
        text-align: center;
        margin-bottom: 2rem;
        color: #333;
      }

      label {
        display: block;
        margin-bottom: 0.5rem;
        font-weight: bold;
        color: #444;
      }

      input,
      textarea,
      select {
        width: 100%;
        padding: 10px;
        margin-bottom: 1.5rem;
        border: 1px solid #ccc;
        border-radius: 6px;
        font-size: 1rem;
        transition: border-color 0.3s;
      }

      input:focus,
      textarea:focus,
      select:focus {
        border-color: #007bff;
        outline: none;
      }

      button {
        width: 100%;
        padding: 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 6px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease;
      }

      button:hover {
        background-color: #0056b3;
      }

      .preview {
        text-align: center;
        margin-top: 1rem;
      }

      .preview img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin-top: 10px;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.1);
      }

      #details-container {
          margin: 15px 0;
      }

      .detail-row {
          display: flex;
          align-items: center;
          gap: 10px;
          /*margin-bottom: 10px;*/
      }

      .detail-row input[type="text"] {
          flex: 1;
          width: 200px;
          padding: 8px 10px;
          border: 1px solid #ccc;
          border-radius: 6px;
          margin: 5px;
          font-size: 14px;
          background-color: #fff;
      }

      .detail-row input[type="text"]:focus {
          border-color: #007bff;
          outline: none;
          box-shadow: 0 0 4px rgba(0, 123, 255, 0.3);
      }

      .detail-row button {
          background: #dc3545;
          color: #fff;
          border: none;
          padding: 8px 10px;
          border-radius: 6px;
          cursor: pointer;
          font-size: 14px;
          transition: background 0.2s ease;
      }

      .detail-row button:hover {
          background: #b52b3a;
      }

      /* Style for the Add Detail button */
      button[onclick*="addDetailField"] {
          margin-top: 10px;
          background: #28a745;
          color: #fff;
          border: none;
          padding: 8px 16px;
          border-radius: 6px;
          cursor: pointer;
          font-size: 14px;
          width: 80px;
          transition: background 0.2s ease;
      }

      button[onclick*="addDetailField"]:hover {
          background: #218838;
      }

      .Add-More{
          display: flex;
          justify-content: space-between;
          align-items: center;
      }
    </style>
  </head>
  <body>
    <div class="top-bar">
      <a href="/home">üè† Home</a>
    </div>

    <div class="form-container">
      <h1>Add Menu Item</h1>
        <form action="/menu/create" method="POST" enctype="multipart/form-data">
            <label for="Name">Name:</label>
            <input type="text" name="Name" required />

            <label for="Description">Description:</label>
            <textarea name="Description" rows="3" required></textarea>

            <label for="category">Category:</label>
            <input type="text" name="category" required />

            <label for="type">Type:</label>
            <input type="text" name="type" required />
            <!-- Price, Discount, Grand Total Side by Side -->
            <div style="display: flex; gap: 10px; align-items: flex-end; margin-bottom: 1rem;">

                <div style="flex: 1;">
                    <label for="price">Price:</label>
                    <input type="number" name="price" id="price" step="1" value="" required style="width: 100%;" />
                </div>

                <div style="flex: 1;">
                    <label for="discount">Discount (%):</label>
                    <input type="number" name="discount" id="discount" step="1" value="0" style="width: 100%;" />
                </div>

            </div>

            <p><strong>Grand Total (Price after discount): ‚Çπ<span id="finalPrice">0.00</span></strong></p>

            <!-- Unit Quantity + Unit Type Side by Side -->
            <div style="display: flex; gap: 10px; align-items: center; margin-bottom: 1rem;">
                <div style="flex: 1;">
                    <label for="unitNumber">Unit Quantity:</label>
                    <input type="number" name="unitNumber" id="unitNumber" step="1" value="" required style="width: 100%;" />
                </div>

                <div style="flex: 1;">
                    <label for="unit">Unit:</label>
                    <select name="unit" id="unit" style="width: 100%;">
                        <option value="g" selected>g</option>
                        <option value="kg">kg</option>
                        <option value="ml">ml</option>
                        <option value="ltr">ltr</option>
                        <option value="pcs">pcs</option>
                    </select>
                </div>
            </div>

            <label for="fssaiLicense">FSSAI License:</label>
            <input type="text" name="fssaiLicense" />

            <label for="shelfLife">Shelf Life:</label>
            <input type="text" name="shelfLife" />

            <label for="returnPolicy">Return Policy:</label>
            <input type="text" name="returnPolicy" />

            <label for="storageTips">Storage Tips:</label>
            <input type="text" name="storageTips" />

            <label for="keyFeatures">Key Features:</label>
            <textarea name="keyFeatures" rows="2"></textarea>

            <label for="manufacturerName">Manufacturer Name:</label>
            <input type="text" name="manufacturerName" />

            <label for="manufacturerAddress">Manufacturer Address:</label>
            <input type="text" name="manufacturerAddress" />

            <label for="customerCareDetails">Customer Care Details:</label>
            <input type="text" name="customerCareDetails" />

            <label for="deliveryTime">Delivery Time (1‚Äì60 min):</label>
            <input type="number" name="deliveryTime" min="1" max="60" required />

            <label for="photos">Photos (max 10):</label>
            <input type="file" name="photos" multiple />

            <div class="preview" id="imagePreview"></div>

            <!-- üîπ Dynamic Details Section -->
            <div class="Add-More">
                <h3>Additional Details</h3>
                <button type="button" onclick="addDetailField()">Add</button>
            </div>
            <div id="details-container">
            </div>
            <button type="submit">Add Menu Item</button>
        </form>

        <script>
            let detailIndex = 0;
            function addDetailField(key = '', value = '') {
                const container = document.getElementById('details-container');
                const div = document.createElement('div');
                div.classList.add("detail-row");

                div.innerHTML = `
        <input type="text" name="details[0][key]" placeholder="Field Name" value="${key}" required>
        <input type="text" name="details[0][value]" placeholder="Field Value" value="${value}" required>
        <button type="button" onclick="this.parentElement.remove()">X</button>
      `;
                container.appendChild(div);
                detailIndex++;
            }
        </script>

        <script>
            const photoInput = document.getElementById("photoInput");
            const imagePreview = document.getElementById("imagePreview");

            photoInput.addEventListener("change", function () {
                imagePreview.innerHTML = "";
                const files = Array.from(this.files).slice(0, 10); // max 10 images
                files.forEach(file => {
                    if(file.type.startsWith("image/")) {
                        const reader = new FileReader();
                        reader.onload = e => {
                            const img = document.createElement("img");
                            img.src = e.target.result;
                            img.style.width = "100px";
                            img.style.margin = "5px";
                            imagePreview.appendChild(img);
                        };
                        reader.readAsDataURL(file);
                    }
                });
            });
        </script>

    </div>

    <script>
      const photoInput = document.getElementById("photoInput");
      const imagePreview = document.getElementById("imagePreview");

      photoInput.addEventListener("change", function () {
        const file = this.files[0];

        if (file && file.type.startsWith("image/")) {
          const reader = new FileReader();

          reader.onload = function (event) {
            imagePreview.innerHTML = `<img src="${event.target.result}" alt="Preview" />`;
          };

          reader.readAsDataURL(file);
        } else {
          imagePreview.innerHTML =
            '<p style="color:red;">Selected file is not an image.</p>';
        }
      });
    </script>

    <script>
        const priceInput = document.getElementById("price");
        const discountInput = document.getElementById("discount");
        const finalPriceEl = document.getElementById("finalPrice");

        function updateFinalPrice() {
            const price = parseFloat(priceInput.value) || 0;
            const discount = parseFloat(discountInput.value) || 0;
            const final = price - (price * discount / 100);
            finalPriceEl.textContent = final.toFixed(2);
        }

        priceInput.addEventListener("input", updateFinalPrice);
        discountInput.addEventListener("input", updateFinalPrice);

        // Initialize display
        updateFinalPrice();
    </script>

  </body>
</html>
